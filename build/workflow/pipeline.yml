trigger:
  branches:
    include:
      - main
      - beta
      - release/beta/*
      - stable
      - release/stable/*

  paths:
    include:
    - '/'
    exclude:
    - .dependabot/
    - .github/
    # don't trigger the CI if only docs files are changed
    - doc/*
    - '**/*.md'

pr: 
  branches:
    include:
      - main
      - beta
      - release/beta/*
      - stable
      - release/stable/*

  paths:
    include:
    - '/'
    exclude:
    - .dependabot/
    - .github/
    # don't trigger the CI if only docs files are changed
    - doc/*
    - '**/*.md'

variables:
  # Path where packages (nuget or app packages) will be copied to.
  PackageOutputPath: $(Build.ArtifactStagingDirectory)\nuget

  IsCanaryBranch: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')]
  IsReleaseBranch: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))]

  ANDROID_NDK_HOME: C:\Microsoft\AndroidNDK64\android-ndk-r16b
  ANDROID_NDK_PATH: C:\Microsoft\AndroidNDK64\android-ndk-r16b
  AndroidNdkDirectory: C:\Microsoft\AndroidNDK64\android-ndk-r16b

jobs:
- job: Windows
  strategy:
    maxParallel: 4
    matrix:
      Samples_Xamarin:
        ApplicationPlatform: Samples
        ArtifactName: Samples
        GeneratePackageOnBuild: false
        DisableNet6MobileTargets: true
      Samples_Xamarin_WinUI:
        ApplicationPlatform: Samples_WinUI
        ArtifactName: Samples_WinUI
        GeneratePackageOnBuild: false
        DisableNet6MobileTargets: true
      Samples_Android_Mobile:
        ApplicationPlatform: Mobile
        ArtifactName: Samples_Android_Mobile
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: net6.0-android
      Packages:
        ApplicationPlatform: Packages
        ArtifactName: uno-ui-toolkit-drop
        GeneratePackageOnBuild: true
      Packages_WinUI:
        ApplicationPlatform: Packages_WinUI
        ArtifactName: uno-ui-toolkit-drop
        GeneratePackageOnBuild: true
  pool:
    vmImage: windows-2022
  
  steps:
    - template: templates/gitversion.yml
    - template: templates/dotnet6-install-windows.yml

    # This SDK version is needed as long as `uap10.0` will be supported in Uno.Core
    - powershell: .\build\Install-WindowsSdkISO.ps1 18362
      displayName: Install Windows SDK 18362

    - template: stage-build.yml

- job: macOS_net6

  timeoutInMinutes: 90 

  strategy:
    maxParallel: 4
    matrix:
      Samples_iOS_Mobile:
        ApplicationPlatform: Mobile
        ArtifactName: Samples_iOS_Mobile
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: net6.0-ios
        BuildCommand: publish
      Samples_macOS_Mobile:
        ApplicationPlatform: Mobile
        ArtifactName: Samples_macOS_Mobile
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: net6.0-macos
        BuildCommand: build
      Samples_Android_Mobile:
        ApplicationPlatform: Mobile
        ArtifactName: Samples_Android_Mobile
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: net6.0-android
        BuildCommand: publish
      Samples_Catalyst_Mobile:
        ApplicationPlatform: Mobile
        ArtifactName: Samples_Catalyst_Mobile
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: net6.0-maccatalyst
        BuildCommand: build

  pool:
    vmImage: 'macOS-12'

  variables:
   - name: XCODE_ROOT
     value: '/Applications/Xcode_13.4.1.app'
   - name: XamarinSDKVersion
     value: 6_12_16
   - group: unoplatform.apple.ios.appstore.distribution

  steps:
  - task: InstallAppleCertificate@2
    displayName: Install Certificate
    inputs:
      certSecureFile: UnoPlatform-Apple-Distribution.p12
      certPwd: '$(appleappstorecertificatepassword)'
      keychain: temp
      deleteCert: true
  
  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: secureFiles
      provProfileSecureFile: Uno_Toolkit_iOS.mobileprovision

  - template: templates/gitversion.yml
  - template: templates/dotnet6-install-mac.yml

  - template: templates/ios-build-select-version.yml
    parameters:
      xCodeRoot: ${XCODE_ROOT}
      XamarinSDKVersion: $(XamarinSDKVersion)
    
  - bash: |
      rm -f ${HOME}/Library/Preferences/Xamarin/Settings.plist
    # https://github.com/actions/virtual-environments/issues/1932
    displayName: Apply workaround for Azure Devops issue 1932
      
  - bash: |
      cd $(build.sourcesdirectory)/samples/Uno.Toolkit.WinUI.Samples/Uno.Toolkit.WinUI.Samples.Mobile
      echo "BUILD_SOURCEBRANCH: $BUILD_SOURCEBRANCH"
      dotnet $(BuildCommand) Uno.Toolkit.WinUI.Samples.Mobile.csproj -f $(UnoTargetFrameworkOverride) -c Release /p:PackageVersion=$(SemVer) /p:ArchiveOnBuild=true /bl:$(build.artifactstagingdirectory)/toolkit-build-$(ApplicationPlatform)-$(UnoTargetFrameworkOverride).binlog "/p:InformationalVersion=$GITVERSION_INFORMATIONALVERSION" 
    displayName: 'Build project for Release | $(ApplicationPlatform) - $(UnoTargetFrameworkOverride)'
  
  - task: CopyFiles@2
    displayName: 'Publish Binaries'
    inputs:
      SourceFolder: $(build.sourcesdirectory)/samples/Uno.Toolkit.WinUI.Samples/Uno.Toolkit.WinUI.Samples.Mobile/bin/Release/$(UnoTargetFrameworkOverride)
      Contents:  |
        **/*.apk
        **/*.ipa
        **/*.dSym/**
        **/*.pkg
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    retryCountOnTaskFailure: 3
    condition: always()
    inputs:
      ArtifactName: $(ArtifactName)


- job: macOS_Xamarin

  timeoutInMinutes: 90 

  strategy:
    maxParallel: 3
    matrix:
      Samples_iOS_Xamarin:
        ApplicationPlatform: iPhone
        ArtifactName: Samples_iOS_Xamarin
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: xamarinios10
        DisableNet6MobileTargets: true
        SamplePlatform: iOS
        SampleFolder: Uno.Toolkit.Samples
      Samples_macOS_Xamarin:
        ApplicationPlatform: macOS
        ArtifactName: Samples_macOS_Xamarin
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: xamarinmac20
        DisableNet6MobileTargets: true
        SamplePlatform: macOS
        SampleFolder: Uno.Toolkit.Samples
      Samples_Android_Xamarin:
        ApplicationPlatform: Android
        ArtifactName: Samples_Android_Xamarin
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: MonoAndroid12.0
        DisableNet6MobileTargets: true
        SamplePlatform: Droid
        SampleFolder: Uno.Toolkit.Samples
      Samples_iOS_Xamarin_WinUI:
        ApplicationPlatform: iPhone_WinUI
        ArtifactName: Samples_iOS_Xamarin_WinUI
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: xamarinios10
        DisableNet6MobileTargets: true
        SamplePlatform: iOS
        SampleFolder: Uno.Toolkit.WinUI.Samples
      Samples_macOS_Xamarin_WinUI:
        ApplicationPlatform: macOS_WinUI
        ArtifactName: Samples_macOS_Xamarin_WinUI
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: xamarinmac20
        DisableNet6MobileTargets: true
        SamplePlatform: macOS
        SampleFolder: Uno.Toolkit.WinUI.Samples
      Samples_Android_Xamarin.WinUI:
        ApplicationPlatform: Android_WinUI
        ArtifactName: Samples_Android_Xamarin_WinUI
        GeneratePackageOnBuild: false
        UnoTargetFrameworkOverride: MonoAndroid12.0
        DisableNet6MobileTargets: true
        SamplePlatform: Droid
        SampleFolder: Uno.Toolkit.WinUI.Samples

  pool:
    vmImage: 'macOS-12'

  variables:
   - name: XCODE_ROOT
     value: '/Applications/Xcode_13.4.1.app'
   - name: XamarinSDKVersion
     value: 6_12_16
   - group: unoplatform.apple.ios.appstore.distribution

  steps:
  - task: InstallAppleCertificate@2
    displayName: Install Certificate
    inputs:
      certSecureFile: UnoPlatform-Apple-Distribution.p12
      certPwd: '$(appleappstorecertificatepassword)'
      keychain: temp
      deleteCert: true
  
  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: secureFiles
      provProfileSecureFile: Uno_Toolkit_iOS.mobileprovision

  - template: templates/gitversion.yml
  - template: templates/dotnet6-install-mac.yml

  - template: templates/ios-build-select-version.yml
    parameters:
      xCodeRoot: ${XCODE_ROOT}
      XamarinSDKVersion: $(XamarinSDKVersion)
    
  - bash: |
      rm -f ${HOME}/Library/Preferences/Xamarin/Settings.plist
    # https://github.com/actions/virtual-environments/issues/1932
    displayName: Apply workaround for Azure Devops issue 1932

  - bash: |
      chmod +x $(build.sourcesdirectory)/build/workflow/scripts/macos-build.sh
      $(build.sourcesdirectory)/build/workflow/scripts/macos-build.sh
    displayName: 'Build solution in Release | $(ApplicationPlatform) - $(UnoTargetFrameworkOverride)'
    retryCountOnTaskFailure: 3
    env:
      BUILD_PLATFORM: "$(ApplicationPlatform)"
      BUILD_PACKAGEVERSION: "$(SemVer)"
      BUILD_GENERATEPACKAGE: "$(GeneratePackageOnBuild)"
      BUILD_SOLUTION: "src/Uno.Toolkit.sln"
      BUILD_BINLOG: "$(build.artifactstagingdirectory)/toolkit-build-$(ApplicationPlatform)-$(UnoTargetFrameworkOverride).binlog"

  - powershell: |
      Set-PSDebug -Trace 1
      if( "$(ApplicationPlatform)" -like "iPhone*") {
        $val = "/iPhone/"
      } else {
        $val = "/"
      }
      echo "##vso[task.setvariable variable=BIN_PLATFORM_FOLDER]$val"
    displayName: Set Bin Folder Path

  - task: CopyFiles@2
    displayName: 'Publish Binaries'
    retryCountOnTaskFailure: 3
    inputs:
      SourceFolder: $(build.sourcesdirectory)/samples/$(SampleFolder)/$(SampleFolder).$(SamplePlatform)/bin$(BIN_PLATFORM_FOLDER)Release
      Contents:  |
        **/*.apk
        **/*.ipa
        **/*.dSym/**
        **/*.pkg
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    retryCountOnTaskFailure: 3
    condition: always()
    inputs:
      ArtifactName: $(ArtifactName)
  
- template: stage-uitests-wasm.yml
- template: stage-uitests-ios.yml
- template: stage-uitests-android.yml
